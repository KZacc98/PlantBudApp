query FetchCommunities {
  Community {
    id
    communityName
    communityDescription
    communitySmallImage
    communityBigImage
    isActive
    createdAt
    updatedAt
  }
}

query FetchCommunityContent($communityId: Int) {
  CommunityUsers(where: {communityId: {_eq: $communityId}}) {
    userId
    createdAt
    updatedAt
  }
  Post(where: {communityId: {_eq: $communityId}}) {
    id
    communityId
    image
    userName
    postBody
    isAnnouncement
    points
    flag
    createdAt
    updatedAt
  }
}

query BatchFetchComments($postIds: [Int!]) {
  Comment(where: {postId: {_in: $postIds}}){
    id
    postId
    userName
    commentBody
    image
    points
    flag
    createdAt
    updatedAt
  }
}

query FetchPostComments($postId: Int) {
  Comment(where: {postId: {_eq: $postId}}) {
    id
    postId
    userName
    commentBody
    image
    points
    flag
    createdAt
    updatedAt
  }
}

query FetchUserContentData($userName: Int) {
  User(where: {id: {_eq: $userName}}) {
    userName
    userType
    profilePicture
  }
}

query BatchFetchUserContentData($userIds: [Int!]) {
  User(where: {id: {_in: $userIds}}) {
    userName
    userType
    profilePicture
  }
}

query fetchPostPoints($postId: Int) {
  Post(where: {id: {_eq: $postId}}) {
    points
  }
}

mutation upVotePost($postId: Int, $points: Int) {
  update_Post(where: {id: {_eq: $postId}}, _set: {points: $points}) {
    returning {
      points
    }
  }
}

mutation AddComment($commentInput: Comment_insert_input!) {
  insert_Comment_one(object: $commentInput) {
    id
    postId
    commentBody
    createdAt
    userName
  }
}

mutation AddPost($postInput: Post_insert_input!) {
  insert_Post_one(object: $postInput) {
    id
    postBody
    createdAt
    userName
  }
}
